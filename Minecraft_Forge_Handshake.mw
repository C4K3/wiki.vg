{{Box|
BORDER = #FFCC00|
BACKGROUND = #FFFF00|
WIDTH = 100%|
ICON = |
HEADING = Work in progress! |
CONTENT =  
This page is a work in progress, and may be missing a lot of information or may contain incorrect information.  Feel free to edit it to add your own information.
}}

This page will document the changes made in the '''[https://minecraftforge.net/ Minecraft Forge] protocol'''.

Largely based on my own attempts to document the protocol and allow connection to forge servers [https://github.com/ORelio/Minecraft-Console-Client/pull/100 here].

== Changes to [[Server List Ping]] ==

When forge is installed, the [[Server List Ping]] changes with an additional <code>modinfo</code>.  Example:

<syntaxhighlight lang="javascript">
{
    "description": "A Minecraft Server",
    "players": {
        "max": 20,
        "online": 0
    },
    "version": {
        "name": "1.8",
        "protocol": 47
    },
    "modinfo": {
        "type": "FML",
        "modList": [
            {
                "modid": "mcp",
                "version": "9.05"
            },
            {
                "modid": "FML",
                "version": "8.0.99.99"
            },
            {
                "modid": "Forge",
                "version": "11.14.3.1512"
            },
            {
                "modid": "rpcraft",
                "version": "Beta 1.3 - 1.8.0"
            }
        ]
    }
}
</syntaxhighlight>

So, to test whether forge is installed, look for the <code>modinfo</code> key and then a <code>type</code> of <code>FML</code>

The <code>modList</code> contains each installed mod's version and ID.

{{warning|The key <code>modList</code> has a capital 'L', unlike any other key in the ping result!}}

This is injected in [https://github.com/MinecraftForge/MinecraftForge/blob/ebe9b6d4cbc4a5281c386994f1fbda04df5d2e1f/patches/minecraft/net/minecraft/network/ServerStatusResponse.java.patch#L45 ServerStatusResponse] by calling [https://github.com/MinecraftForge/MinecraftForge/blob/ebe9b6d4cbc4a5281c386994f1fbda04df5d2e1f/src/main/java/net/minecraftforge/fml/common/network/internal/FMLNetworkHandler.java#L192-L206 FMLNetworkHandler.enhanceStatusQuery()].

== Connection to a forge server ==

Attempting to connect to a forge server without making any changes results in getting immediately disconnected with the message "<code>This server requires FML/Forge to be installed. Contact your server admin for more details.</code>".  This message is displayed in [https://github.com/MinecraftForge/MinecraftForge/blob/ebe9b6d4cbc4a5281c386994f1fbda04df5d2e1f/src/main/java/net/minecraftforge/fml/common/FMLCommonHandler.java#L653-L661 FMLCommonHandler] and is [https://github.com/MinecraftForge/MinecraftForge/blob/ebe9b6d4cbc4a5281c386994f1fbda04df5d2e1f/patches/minecraft/net/minecraft/network/handshake/client/C00Handshake.java.patch#L35 injected] in a modified [[Protocol#Handshake|0x00 Handshake packet]].

If <code>\0FML\0</code> is added to the end of the server's address (again, in the 0x00 handshake packet), the server will not immediately reject you.  However, you still will not complete the connection.

This occurs because Minecraft Forge has an additional set of handshakes (for determining mods and block IDs), that must be completed before the server allows logging in.

== Forge handshake ==

Forge's handshake occurs in the middle of the [[Protocol FAQ#What's the normal login sequence for a client?|normal login sequence]], right after [[Protocol#Login Success|0x02 Login Success]] is received by the client.

In addition to the [[Debugging|normal packet debugging]] for the server, if <code>-Dfml.debugNetworkHandshake=true</code> is passed to the forge server, some more information about the current handshake status will be outputted.

{{Need Info|Why does it send the CompleteHandshake packet to itself?  How does it keep synchronized (especially near the end with the ACKs)?}}

* '''S→C''': [[Plugin channel#REGISTER|<code>REGISTER</code>]] forge's plugin channels: FML|HS, FML, FML|MP, FML, FORGE (yes, FML is there twice; technically, it does not need to be there twice but that is the way that Forge sends it and sending it that way will act more similar to forge)
* '''S→C''': A ServerHello packet is sent on <code>FML|HS</code> including the player's dimension (0 if it's the first login)
* '''C→S''': <code>REGISTER</code> the plugin channels: FML|HS, FML, FML|MP, FML, FORGE.
* '''C→S''': A ClientHello packet is sent on the <code>FML|HS</code> channel.
* '''C→S''': A ModList packet is sent.
* Server checks that the mod list is compatible.  If incompatible, the player is [[Protocol#Disconnect|disconnected]] with an explanatory message.  Otherwise, continue.
* '''S→C''': A ModList packet is sent.
* Client checks that the mod list is compatible.  If incompatible, it disconnects.  Otherwise, continue.
* '''C→S''': A HandshakeAck packet is sent, with the phase being <code>WAITINGSERVERDATA</code> (2).
* '''S→C''': A series of RegistryData packets is sent, with hasMore being true for all packets except the last.
* Client reads and stores each RegistryData, continuing reading until hasMore is false.  Once hasMore is false, it checks whether it has all of the needed blocks/items.  If it does not, it disconnects.  Otherwise, continue.
* '''C→S''': A HandshakeAck packet is sent with phase being <code>WAITINGSERVERCOMPLETE</code> (3).
* '''S→C''': A HandshakeAck packet is sent with phase being <code>WAITINGCACK</code> (2).
* '''C→S''': A HandshakeAck packet is sent with phase being <code>PENDINGCOMPLETE</code> (4).
* '''S→C''': A HandshakeAck packet is sent with phase being <code>COMPLETE</code> (3).
* The server sends a "CompleteHandshake" packet '''to itself'''.  (Not sure why)
* '''C→S''': A HandshakeAck packet is sent with phase being <code>COMPLETE</code> (5).
* The client sends a "CompleteHandshake" packet '''to itself'''.  (Not sure why)

== Definitions ==

Minecraft Forge uses an additional type not covered in [[data types]] for some things -- a varshort.  This is essentially the same as a regular short, except that if the top byte (what is normally sign) is set, it is followed by an additional byte.  This allows forge to retain backwards compatibility but extend the length of certain numbers -- the varshort is only used in places where, in vanilla Minecraft, the sign bit would not have been set.  It is implemented in [https://github.com/MinecraftForge/MinecraftForge/blob/ebe9b6d4cbc4a5281c386994f1fbda04df5d2e1f/src/main/java/net/minecraftforge/fml/common/network/ByteBufUtils.java#L58-L89 ByteBufUtils].

Discriminator bytes are the way that Minecraft Forge allows sending multiple messages on one [[plugin channel]].  They aren't part of the original specification, but a similar concept is used with the [[Plugin channel#MC&#x7c;AdvCdm|<code>MC|AdvCdm</code> plugin channel]] (used for command blocks).  That packet decides whether a block location is being sent or an entity ID (minecart command blocks) is being sent based off of the value of the first byte in the packet.

In the same way, forge uses the first byte of the plugin message to specify which packet to use.  It uses [https://github.com/MinecraftForge/MinecraftForge/blob/ebe9b6d4cbc4a5281c386994f1fbda04df5d2e1f/src/main/java/net/minecraftforge/fml/common/network/FMLIndexedMessageToMessageCodec.java FMLIndexedMessageToMessageCodec] to automatically switch the value.

Discriminator bytes change depending on the channel: 0 for <code>FML|HS</code> means something different from 0 for <code>FML</code>.

== <code>FML|HS</code> Packet structure ==

<code>FML|HS</code> is used to perform the handshake.  Discriminator bytes are found in [https://github.com/MinecraftForge/MinecraftForge/blob/ebe9b6d4cbc4a5281c386994f1fbda04df5d2e1f/src/main/java/net/minecraftforge/fml/common/network/handshake/FMLHandshakeCodec.java FMLHandshakeCodec].

=== [https://github.com/MinecraftForge/MinecraftForge/blob/ebe9b6d4cbc4a5281c386994f1fbda04df5d2e1f/src/main/java/net/minecraftforge/fml/common/network/handshake/FMLHandshakeMessage.java#L33-L76 ServerHello] ===

Starts the handshake.

{| class="wikitable"
 ! Channel
 ! Bound To
 ! Field Name
 ! Field Type
 ! Notes
 |-
 |rowspan="6"| <code>FML|HS</code>
 |rowspan="6"| Client
 | Discriminator
 | Byte
 | Always 0 for ServerHello
 |-
 | FML protocol Version
 | Byte
 | Determined from [https://github.com/MinecraftForge/MinecraftForge/blob/ebe9b6d4cbc4a5281c386994f1fbda04df5d2e1f/src/main/java/net/minecraftforge/fml/common/network/NetworkRegistry.java#L67-L69 NetworkRegistery].  Currently <code>2</code>.
 |-
 | Override dimension
 | Optional Int
 | Only sent if protocol version is greater than 1.
 |}

=== [https://github.com/MinecraftForge/MinecraftForge/blob/ebe9b6d4cbc4a5281c386994f1fbda04df5d2e1f/src/main/java/net/minecraftforge/fml/common/network/handshake/FMLHandshakeMessage.java#L77-L95 ClientHello] ===

Response from the client to the ServerHello packet.

{| class="wikitable"
 ! Channel
 ! Bound To
 ! Field Name
 ! Field Type
 ! Notes
 |-
 |rowspan="6"| <code>FML|HS</code>
 |rowspan="6"| Server
 | Discriminator
 | Byte
 | Always 1 for ClientHello.
 |-
 | FML protocol Version
 | Byte
 | Determined from [https://github.com/MinecraftForge/MinecraftForge/blob/ebe9b6d4cbc4a5281c386994f1fbda04df5d2e1f/src/main/java/net/minecraftforge/fml/common/network/NetworkRegistry.java#L67-L69 NetworkRegistery].  Currently <code>2</code>.
 |}

=== [https://github.com/MinecraftForge/MinecraftForge/blob/ebe9b6d4cbc4a5281c386994f1fbda04df5d2e1f/src/main/java/net/minecraftforge/fml/common/network/handshake/FMLHandshakeMessage.java#L96-L152 ModList] ===

Contains a list of all mods installed on the server or client.  Sent from the client to the server first, and then the server responds with its mod list.  The server's mod list matches the one sent in the ping.

{| class="wikitable"
 ! Channel
 ! Bound To
 !colspan="2"| Field Name
 !colspan="2"| Field Type
 ! Notes
 |-
 |rowspan="4"| <code>FML|HS</code>
 |rowspan="4"| Both
 |colspan="2"| Discriminator
 |colspan="2"| Byte
 | Always 2 for ModList
 |-
 |colspan="2"| Number of mods
 |colspan="2"| Varint
 | Number of mods below
 |-
 |rowspan="2"| Mods
 | Mod name
 |rowspan="2"| Array
 | String
 | Name of the mod
 |-
 | Mod version
 | String
 | Version of the mod
 |}

=== [https://github.com/MinecraftForge/MinecraftForge/blob/6e90348dc546164b21735aefd83ed0bac0d8283c/src/main/java/net/minecraftforge/fml/common/network/handshake/FMLHandshakeMessage.java#L154-L240 RegistryData] ===

{{Need Info|Explain exactly what registries are, and figure out what Substitutions and Dummies are}}

The server sends several of this packet, one for each registry.  It'll keep sending them until the hasMore value is no longer true.

{| class="wikitable"
 ! Channel
 ! Bound To
 !colspan="2"| Field Name
 !colspan="2"| Field Type
 ! Notes
 |-
 |rowspan="10"| <code>FML|HS</code>
 |rowspan="10"| Both
 |colspan="2"| Discriminator
 |colspan="2"| Byte
 | Always 3 for RegistryData.
 |-
 |colspan="2"| Has more
 |colspan="2"| Boolean
 | Marks whether another RegistryData packet will be sent after this.
 |-
 |colspan="2"| Name
 |colspan="2"| String
 | Name of the registry for this packet
 |-
 |colspan="2"| Number of ids
 |colspan="2"| Varint
 | Number of ids sent below
 |-
 |rowspan="2"| Ids
 | Name
 |rowspan="2"| Array
 | String
 | Name of the thing
 |-
 | Id
 | Varint
 | Numerical id of the thing
 |-
 |colspan="2"| Number of substitutions
 |colspan="2"| Varint
 | Number of substitutions sent below
 |-
 |colspan="2"| Substitutions
 |colspan="2"| Array of strings
 | Each substitution
 |-
 |colspan="2"| Number of dummies
 |colspan="2"| Varint
 | Number of dummies in the array below.  '''May not be present in older versions of forge'''; check if there still is data remaining in the packet before continuing to read data.
 |-
 |colspan="2"| Dummies
 |colspan="2"| Array of strings
 | Each dummy?
 |}

=== [https://github.com/MinecraftForge/MinecraftForge/blob/ebe9b6d4cbc4a5281c386994f1fbda04df5d2e1f/src/main/java/net/minecraftforge/fml/common/network/handshake/FMLHandshakeMessage.java#L241-L264 HandshakeAck] ===

Confirms that the client is able to use the settings sent previously.

{| class="wikitable"
 ! Channel
 ! Bound To
 ! Field Name
 ! Field Type
 ! Notes
 |-
 |rowspan="6"| <code>FML|HS</code>
 |rowspan="6"| Both
 | Discriminator
 | Byte
 | Always -1 (255) for HandshakeAck
 |-
 | Phase
 | Byte
 | The current phase, which is the ordinal (0-indexed) in the [https://github.com/MinecraftForge/MinecraftForge/blob/ebe9b6d4cbc4a5281c386994f1fbda04df5d2e1f/src/main/java/net/minecraftforge/fml/common/network/handshake/FMLHandshakeClientState.java FMLHandshakeClientState] or [https://github.com/MinecraftForge/MinecraftForge/blob/ebe9b6d4cbc4a5281c386994f1fbda04df5d2e1f/src/main/java/net/minecraftforge/fml/common/network/handshake/FMLHandshakeServerState.java FMLHandshakeServerState] enums (if the server is sending it, it is in the ServerState enum, and if the client is sending it, it is the ClientState enum).
 |}

=== [https://github.com/MinecraftForge/MinecraftForge/blob/ebe9b6d4cbc4a5281c386994f1fbda04df5d2e1f/src/main/java/net/minecraftforge/fml/common/network/handshake/FMLHandshakeMessage.java#L265-L267 HandshakeReset] ===

{{Need Info|Is this ever actually sent?}}

Causes the client to recomplete the entire handshake from the start.  Does not appear to be sent.  There is no payload beyond the discriminator byte.

{| class="wikitable"
 ! Channel
 ! Bound To
 ! Field Name
 ! Field Type
 ! Notes
 |-
 |rowspan="6"| <code>FML|HS</code>
 |rowspan="6"| Client
 | Discriminator
 | Byte
 | Always -2 (254) for HandshakeReset
 |}

== Differences from Forge 1.7.10 ==

Forge for Minecraft 1.8 made some changes from the 1.7.10 version.

The most important thing to keep track of isn't (entirely) a forge change.  In 1.7.10, [http://wiki.vg/index.php?title=Protocol&oldid=6003#Plugin_Message_2 plugin channel packets] are length prefixed, while in 1.8 they are not.  However, forge makes [https://github.com/MinecraftForge/MinecraftForge/blob/605457deecba2144d69113d3c9ce6589021f542b/fml/patches/minecraft/net/minecraft/network/play/server/S3FPacketCustomPayload.java.patch some more changes] to the server to client packet (but not the client to server packet): Rather than using a short for the length, a varshort is used.  Due to the way that varshorts work, this is backwards compatible, but if this is not accounted for you may receive forge packets that seem corrupted as there is an extra byte that appears seemingly randomly.

{{Warning|While it may seem like you can get away with not handling varshorts, on servers with lots of mods (EG FTB), this will appear.}}

Additionally, in 1.7.10 the registries packet is instead "ModIdData":

=== [https://github.com/MinecraftForge/MinecraftForge/blob/ebe9b6d4cbc4a5281c386994f1fbda04df5d2e1f/src/main/java/net/minecraftforge/fml/common/network/handshake/FMLHandshakeMessage.java#L154-L240 ModIdData] ===

Contains numeric ID mapping for blocks and items.

{{Need Info|Again, what are blockSubstitutions and itemSubstitutions?}}

{| class="wikitable"
 ! Channel
 ! Bound to
 ! colspan="2"|Name
 ! colspan="2"|Type
 ! Notes
 |-
 | rowspan="8"|<code>FML|HS</code>
 | rowspan="8"|Client
 | colspan="2"|Discriminator
 | colspan="2"|Byte
 | Always 3 for ModIdData
 |-
 | colspan="2"|Mapping length
 | colspan="2"|VarInt
 | Length of the following mapping
 |-
 | rowspan="2"|Mapping
 | Name
 | rowspan="2"|Array
 | String
 | Name of the block/item.
 |-
 | ID
 | VarInt
 | Numeric ID of the item.
 |-
 | colspan="2"|Block substitutions length
 | colspan="2"|VarInt
 | Length of the following array
 |-
 | colspan="2"|Block substitutions
 | colspan="2"|Array of strings
 | Block substitutions
 |-
 | colspan="2"|Item substitutions length
 | colspan="2"|VarInt
 | Length of the following array
 |-
 | colspan="2"|Item substitutions
 | colspan="2"|Array of strings
 | Item substitutions
 |}
