
== Notes ==

All public APIs are rate limited so you are expected to cache the results. This is currently set at 600 per 10 minutes but this may change
For some parts of the API, demo account are sometimes included, sometimes not. Mojang keeps changing this.

== Username -> Profile at time ==

  GET https://api.mojang.com/users/profiles/minecraft/<username>?at=<timestamp>

This will return the uuid of the name at the timestamp provided.
* The timestamp is a unix timestamp
* When the <code>at</code> parameter is not sent, the current time is used

=== Response ===
<syntaxhighlight lang="javascript">
{
  "id": "7125ba8b1c864508b92bb5c042ccfe2b",
  "name": "KrisJelbring"
}
</syntaxhighlight>

* <code>name</code> is case-corrected
* <code>legacy</code> only appears when true (not migrated to mojang account)
* <code>demo</code> only appears when true (account unpaid)


== UUID -> Name history ==

   https://api.mojang.com/user/profiles/<uuid>/names

Returns all the usernames this user has used in the past and the one they are using currently

=== Response ===
<syntaxhighlight lang="javascript">
[
  "KrisJelbring"
]
</syntaxhighlight>



== Playernames -> UUIDs ==

  POST https://api.mojang.com/profiles/minecraft

Where 'minecraft' - agent name

This will return player UUIDS and some extras.

=== Payload ===

<syntaxhighlight lang="javascript">
[
    "maksimkurb",
    "nonExistingPlayer" //Test for non-existing player
]
</syntaxhighlight>

=== Response ===

<syntaxhighlight lang="javascript">
[
    {
        "id": "0d252b7218b648bfb86c2ae476954d32",
        "name": "maksimkurb",
        "legacy": true,
        "demo": true
    }
]
</syntaxhighlight>

* name is case-corrected
* legacy only appears when true (profile not migrated to mojang.com)
* demo only appears when true (account unpaid)
* IllegalArgumentException is returned when any of the usernames is null or ""
* The <code>Content-Type</code> HTTP header must be <code>application/json</code>
* You cannot request more than 100 names per request

== UUID -> Profile + Skin/Cape ==

  https://sessionserver.mojang.com/session/minecraft/profile/<uuid>

This will return the player's username plus any additional information about them (e.g. skins). Example: https://sessionserver.mojang.com/session/minecraft/profile/4566e69fc90748ee8d71d7ba5aa00d20

This has a much stricter rate limit: You can request the same profile once per minute.

[[Category:Protocol Details]]
[[Category:Minecraft Modern]]

=== Response ===
<syntaxhighlight lang="javascript">
{
    "id": "<profile identifier>",
    "name": "<player name>",
    "properties": [ 
        {
            "name": "textures",
            "value": "<base64 string>",
            "signature": "<base64 string; signed data using Yggdrasil's private key>" // Only provided if ?unsigned=false is appended to url
        }
    ]
}
</syntaxhighlight>

The "value" base64 string for the "textures" object decoded:
<syntaxhighlight lang="javascript">
{
    "timestamp": "<unix time in ms>",
    "profileId": "<profile uuid>",
    "profileName": "<player name>",
    "isPublic": "<true or false>",
    "textures": {
        "SKIN": {
            "url": "<player skin URL>"
        },
        "CAPE": {
            "url": "<player cape URL>"
        }
    }
}
</syntaxhighlight>

* timestamp sometimes in the past (probably due to cached results?)

== Examples ==

[https://github.com/techkid6/AccountsClientPython Python] | uuids or names to profiles

[https://gist.github.com/jomo/74944770e7647855ac9d Python] | names file to uuids+names file

[https://gist.github.com/ezfe/a71feccd3a837a2592f1 PHP] | uuids to names

[https://github.com/ozzyfant/AccountsClientPHP PHP] uuids to names, names to uuids


[[Category:Protocol Details]]
[[Category:Minecraft Modern]]
