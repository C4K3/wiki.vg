[[Realcraft]] is a custom Minecraft Beta server coded by [[User:Jailout2000|Jailout2000]] around the Beta 1.8.1 protocol. It is coded in REALbasic, a crappy language but very easy to use and learn. Since it's coded in REALbasic, this means that it does not have access to kernel threads, and therefore is not a multi-threaded server. The server runs out of the console; it does not have a GUI to which you can control it.

== License ==

Realcraft is written as closed source, therefore it is not available to the general public. If you really wish to see the source, message Jailout2000.

== Project Status ==

Currently the project is in '''active''' development.

=== Plans ===

* Eventually use an external library for generation of worlds. At the moment, generation of worlds is done internally, and is not very impressive (just flat worlds with some scenery).
* Provide a download for the server so others may use it.
** This will mean building the server for cross-platform support. Currently it is Windows only.
* Player authentication with Minecraft.net.
* MySQL database support.
* Advertise the server to others, so that it can be stress tested.

=== Live Server ===

This server may or may not be online; it's only online when Jailout2000 is working on the server.
* mc.clan-warp.net:25566

== Technical Details ==

=== Class Hierarchy ===
* Entity
** Item
** Mob
*** Player
** Projectile
*** Vehicle
* ServerSocket
** GameServer
* TCPSocket
** GameSocket
* World
* WorldChunk

=== Class Objectives ===
{| class="wikitable"
|- class="row0"
! class="col0" width="5%" | Class
! class="col1" width="50%" | Description
! class="col2" width="45" | Objectives
|- class="row1"
! class="col0 centeralign" | Entity
| class="col1" | Entity refers to any item, mob, player, projectile, or vehicle in the world. Every entity has an ID (known as an EID or Entity ID) which is a unique 32-bit integer used to identify a specific entity. All entities have an XYZ double-precision floating-point (64-bit) integer coordinate pair along with single-precision floating-point (32-bit) integer pitch and yaw coordinates. Y points upwards, X points South, and Z points West.
| class="col2" | Act as a base for each entity type.
|- class="row2"
! class="col0 centeralign" | Item
| class="col1" | An entity of type Item. It has the properties: ID, Damage/Uses, and Count.
| class="col2" | Act as a representation of any item in the world.
|- class="row3"
! class="col0 centeralign" | Mob
| class="col1" | An entity of type Mob. It has the properties: Health, Stance, and On-Ground.
| class="col2" | Act as a representation of any aggressive or passive mob in the world (such as a creeper or spider).
|- class="row4"
! class="col0 centeralign" | Player
| class="col1" | An entity of type Player, a subclass of Mob. It has the properties: Experience, Food, Food Saturation, and Name.
| class="col2" | Act as a representation of any player in the world (an actual person).
|- class="row5"
! class="col0 centeralign" | Projectile
| class="col1" | An entity of type Projectile. It has the properties: Type, Velocity X, Velocity Y, and Velocity Z. The Type IDs are shared between vehicles as well.
| class="col2" | Act as a representation of any projectile in the world (such as an arrow).
|- class="row6"
! class="col0 centeralign" | Vehicle
| class="col1" | An entity of type Vehicle. It has the property: Passenger. The Type IDs are shared between projectiles as well. The Passenger is a reference to a valid Mob object.
| class="col2" | Act as a representation of any vehicle in the world (such as a Minecart).
|- class="row7"
! class="col0 centeralign" | GameServer
| class="col1" | A class to wait for connections from outside the machine. All connections are handed off to a GameSocket object.
| class="col2" | Act as the front-end of the server's connections.
|- class="row8"
! class="col0 centeralign" | GameSocket
| class="col1" | A class to process all network data events such as data received or data sent.
| class="col2" | Read and parse all Minecraft game data, and possibly respond with data for the Minecraft client. Optionally, it can also disconnect the client when and where it sees fit.
|- class="row9"
! class="col0 centeralign" | World
| class="col1" | Holds data for each world on the server, including the name, who's in what world, the chunks related to the world, and much more.
| class="col2" | Allow the server to host multiple worlds by having identifiable world objects.
|- class="row10"
! class="col0 centeralign" | WorldChunk
| class="col1" | Holds chunk data for a world on the server. The world seed plays a big role in how a chunk formulates its block data. The chunk is responsible for generating itself for the world to use.
| class="col2" | Allow the world to have a set of chunks to send to a Minecraft client.
|}

=== Logging ===
The logger is called whenever there is text displayed to the command line. Whatever you see on screen is also sent to a file. The only exception to this rule is when Realcraft is displaying a percentile of an action being done (i.e. ''Generating world... 50%''), in this case the file does not get updated until the full line is displayed (''Generating world... done.'') or when there's an error while doing the action.

All logs are stored in the folder called '''Logs''' under the folder '''Realcraft''' inside the application data folder of your system. On Windows Vista and newer, this is your %APPDATA% folder (C:\Users\&lt;user&gt;\AppData\Roaming).

The filename is always in the format '''YYYY-MM-DD.log''' where YYYY is the year, MM is the month, and DD is the day of the month.

Log data is always appended to the current log file, it never replaces a file's previous data. Log data is outputted as plain text. Each line represents a new log entry, and all log entries have a format of '''[HH:MM:SS]&lt;space&gt;&lt;payload&gt;''' where HH:MM:SS is the timestamp in 24-hour format, &lt;space&gt; is a 0x20 (a spacebar), and &lt;payload&gt; is the information. All new lines are ended as per the system the data is logged to. Linux and other minor systems end all lines in 0x0D (\n), Windows ends all lines in 0x0D and 0x0A (\r\n) respectively, and Mac ends all lines in 0x0A (\r).


----
[[Server_List|Return to Custom Minecraft Beta servers]]
[[Category:Minecraft Beta Servers]]
