This page documents the changes from the [[Protocol|last stable Minecraft release]] (currently 1.6.2, protocol 74) to the current pre-release. Note that this page contains bleeding-edge information that may not be completely or correctly documented.
He who wishes to commandeer the merging of this into [[Protocol]] when an update is made must be sure to respect any changes that may have occured to the respective packets there.

== Protocol History ==
13w36a - Added sound category byte to 0x3E
- Changed 0xC8 to a string:int map

13w37b - 

1.6.3 - Terrain fixes to help moving to 1.7, no packet changes from 1.6.2

1.6.4 -

13w38a/b/c -

13w39a - UUIDs added to spawn named entity, game state 'gamemode' byte -> float

== Protocol Version ==
13w39a - 80

13w38a/b/c - 79

1.6.4 - 78

1.6.3 - 77

13w37b - 76

13w36a - 75

== New Packets ==
None

== Changed Packets ==
{{anchor|0x03}}
=== Chat Message (0x03) ===

The message from the server to the client can currently handle
* A normal string that doesn't begin with ", { or [
* A JSON string
* A JSON array
* A JSON object

The JSON format works as follows (minus the //comments):
    {
        // Plain text
        "text": "Hello world",
        //or
        // Translatable string
        "translate": "multiplayer.player.joined",
        "with": [
            //This can be replaced another json object allowing the parts
            //to be styled/translated seperately
            "thinkofdeath",
        ],
        //Items in the extra section will be appended to the message.
        //They can strings or json objects. If included the array must 
        //not be empty
        "extra": [
            "Testing",
            {"translate":"demo.day.2"}
        ],
        //Controls whether the text is bold or not. Default false
        "bold":true,
        //Controls whether the text is italic or not. Default false
        "italic":false,
        //Controls whether the text is underlined or not. Default false
        "underlined": false, 
        //Controls whether the text is striked out or not. Default false
        "strikethrough": false,
        //Controls whether the text is randomised constantly or not. Default false
        "obfuscated": false,
        //Controls the color of the text
        //Supported 'colors':
        // * black
        // * dark_blue
        // * dark_green
        // * dark_aqua
        // * dark_red
        // * dark_purple
        // * gold
        // * gray
        // * dark_gray
        // * blue
        // * green
        // * aqua
        // * red
        // * light_purple
        // * yellow
        // * white
        // * obfuscated
        // * bold
        // * strikethrough
        // * underline
        // * italic
        // * reset
        "color":"red",
        //Executes the action once the text is clicked
        "clickEvent":{
            //The action to execute
            //Supported actions:
            // * open_url
            // * open_file
            // * run_command
            // * suggest_command
            "action":"run_command",
            //The value to run the action with
            //open_url: Url to open
            //open_file: File to open
            //run_command: Command to execute
            //suggest_command: Text to place in the player's text box
            "value": "/time set day",
        },
        //Displays the action apon hovering over the text
        "hoverEvent": {
            //The action to execute
            //Supported actions
            // * show_text
            // * show_achievement
            // * show_item
            "action":"show_text",
            //The value to the action with
            //show_text: Text to display can be a JSON object
            //show_achievement: Name of the achievemnt to display e.g: "achievement.openInventory"
            //show_item: JSON version of the item, must be quoted. e.g: "{id:35,Damage:5,Count:2,tag:{display:{Name:Testing}}}"
            "value": "Hello",
        },
    }

{{anchor|0x14}}
=== Spawn Named Entity (0x14) ===
''Server to Client''

The only named entities (at the moment) are players (either real or NPC/Bot). This packet is sent by the server when a player comes into visible range, '''not''' when a player joins.

Servers can, however, safely spawn player entities for players not in visible range. The client appears to handle it correctly.

At one point, the Notchian client was not okay with receiving player entity packets, including 0x14, that refer to its own username or Entity ID; and would teleport to the absolute origin of the map and fall through the Void any time it received them. However, in more recent versions, it appears to handle them correctly, by spawning a new entity as directed (though future packets referring to the entity ID may be handled incorrectly).

{| class="wikitable"
|-
| Packet ID
| Field Name
| Field Type
| Example
| Notes
|-
| rowspan="9" | 0x14
| Entity ID
| int
| <code>94453</code>
| Player ID
|-
| '''Player UUID'''
| string
| <code></code>
| 
|-
| Player Name
| string
| <code>Twdtwd</code>
| Max length of 16
|-
| X
| int
| <code>784</code>
| Player X as a [[Data_Types#Fixed-point_numbers|fixed-point number]]
|-
| Y
| int
| <code>2131</code>
| Player Y as [[Data_Types#Fixed-point_numbers|fixed-point number]]
|-
| Z
| int
| <code>-752</code>
| Player Z as [[Data_Types#Fixed-point_numbers|fixed-point number]]
|-
| Yaw
| byte
| <code>0</code>
| Player rotation as a packed byte
|-
| Pitch
| byte
| <code>0</code>
| Player rotation as a packed byte
|-
| Current Item
| short
| <code>0</code>
| The item the player is currently holding. Note that this should be 0 for "no item", unlike -1 used in other packets. A negative value crashes clients.
|-
| Metadata
| [[Entities#Entity_Metadata_Format|Metadata]]
| <code></code>
| The 1.3 client crashes on packets with no metadata, but the server can send any metadata key of 0, 1 or 8 and the client is fine.
|-
| Total Size:
| colspan="4" | 24 bytes + length of strings + metadata (at least 1)
|}

{{anchor|0x3E}}

=== Named Sound Effect (0x3E) ===
''Server to client''

Used to play a sound effect on the client.

All known sound effect names can be seen [https://github.com/SirCmpwn/Craft.Net/blob/master/source/Craft.Net.Common/SoundEffect.cs here].

{| class="wikitable"
|-
| Packet ID
| Field Name
| Field Type
| Example
| Notes
|-
| rowspan="7" | 0x3E
| Sound name
| string
| step.grass
| 250
|-
| Effect position X
| int
| 250
| effect X multiplied by 8
|-
| Effect position Y
| int
| 250
| effect Y multiplied by 8
|-
| Effect position Z
| int
| 250
| effect Z multiplied by 8
|-
| Volume
| float
| 9
| 1 is 100%, can be more
|-
| Pitch
| byte
| 1
| 63 is 100%, can be more
|-
| Sound Category
| Unsigned byte
| 6
| Possible values:
MASTER: 0

MUSIC: 1

RECORDS: 2

WEATHER: 3

BLOCKS: 4

MOBS: 5

ANIMALS: 6

PLAYERS: 7
|-
| Total Size:
| colspan="4" | 21 bytes + length of string
|}


{{anchor|0x46}}
=== Change Game State (0x46) ===
''Server to Client''

This packet appeared with protocol version 10. Currently, it appears when a bed can't be used as a spawn point and when the rain state changes.  it could have additional uses in the future.

The class has an array of strings linked to reason codes 0, 1, 2, and 3 but only the codes for 1 and 2 are null.

{| class="wikitable"
|-
| Packet ID
| Field Name
| Field Type
| Example
| Notes
|-
| rowspan="2" | 0x46
| Reason
| byte
| 0
|
|-
| Game mode?
| '''float'''
| 0
| Used only when reason = 3. 0 is survival, 1 is creative.
|-
| Total Size:
| colspan="4" | 3 bytes
|}

'''Reason codes'''

{| class="wikitable"
|-
! Code
! Effect
! Text
|-
| 0
| Invalid Bed
| "tile.bed.notValid"
|-
| 1
| Begin raining
| null
|-
| 2
| End raining
| null
|-
| 3
| Change game mode
| gameMode.changed
|-
| 4
| Enter credits
|
|}

{{anchor|0xC8}}
=== Increment Statistic (0xC8) ===
''Server to Client''

{| class="wikitable"
|-
| Packet ID
| colspan="2" | Field Name
| Field Type
| Example
| Notes
|-
| rowspan="3" | 0xC8
| colspan="2" | Count
| int
| 5
| Number of entrys
|-
| Entry
| Statistic's name
| string
| 
| 
|-
| Entry
| Amount
| int
| 5
| The amount to increase by
|-
| Total Size:
| colspan="5" | 9 bytes
|}

{{anchor|0xCD}}
=== Client Statuses (0xCD) ===
''Client to server''

Sent when the client is ready to complete login and when the client is ready to respawn after death.

{| class="wikitable"
|-
| Packet ID
| Field Name
| Field Type
| Example
| Notes
|-
| rowspan="1" | 0xCD
| Payload
| byte
| 0
| Bit field. 0: Initial spawn, 1: Respawn after death, '''2: Request statistics'''
|-
| Total Size:
| colspan="5" | 2 bytes
|}

== Removed Packets ==
None

== Plugin Channels ==

=== MC|RPack ===
{| class="wikitable"
! Field Name !! Field Type !! Example !! Notes
|-
| Resource pack URL || UTF8 string || http://example.com/pack.zip || 
|}
